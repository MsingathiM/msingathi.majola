package featureSteps;

import cucumber.api.java.en.And;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;

import java.util.Random;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.equalTo;

public class TestPetStore {

    AddPet pet;

    final static String url = "https://petstore.swagger.io/v2/pet";

    @Given("^I open the swagger endpoint$")
    public void iOpenTheSwaggerEndpoint() {
        String url = "https://petstore.swagger.io/v2/pet/";
    }

    @When("^I search for all pets by status$")
    public void iSearchForAllPetsByStatus() {

        System.out.println("===============Returning available Pets==================");


        //Randomly selecting pet by status
        boolean foundPet = false;
        String [] status = {"available", "sold", "pending"};
        Random random = new Random();
        int index = random.nextInt(status.length);

        if(foundPet == false) {

            given()
                    .get(url + "/findByStatus?status="+status[index])
                    .then()
                    .log()
                    .body();

            foundPet = true;


        }
        else {
            foundPet = false;
        }

        System.out.println("Displays " + foundPet +
                " since it found the queried pet from array by status");

    }

    @And("^I add a pet with auto generated name and make it available on list$")
    public void iAddAPetWithAutoGeneratedNameAndMakeItAvailableOnList(AddPet pet) {

        Random random = new Random();
        int Codelength = 1000;
        int index = random.nextInt(Codelength);

        this.pet = pet;
        int id = index;
        String jsonPet = "{\"id\": " + id + " , \"name\": \""
                + pet.getName() + "\", \"photoUrls\": [], \"status\": \""
                + pet.getStatus() + "\"}";

        given()
                .contentType("application/json")
                .contentType(jsonPet)
                .post(url);

        this.pet.setId(id);

    }

    @Then("^I should get results of my pet when I search with id$")
    public void iShouldGetResultsOfMyPetWhenISearchWithId() {

        given().
                get(url + "/{id}", pet.getId())
                .then().statusCode(200)
                .and().body("name", equalTo(pet.getName()));
    }

}
